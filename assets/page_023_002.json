{"background":{"class":"border_1"},"controls":{"l":"false","r":"false","t":"false","b":"false"},"subtitle":{"selector":"subtitle","text":"Observables"},"code":[{"type":"typescript","class":"height_25","code":"import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/interval';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/mergeMap';\n    \n@Injectable()\nexport class ActivityService {\n\n    interval: number;\n\n    constructor(\n        private http: Http\n    ) {}\n    \n    public getActivities(): Observable<any> {\n\n        return Observable\n                    .interval(5000)\n                    .flatMap(() => this.http.get('http://api.icndb.com/jokes/random'))\n                    .map((res: Response) => res.json())\n                    .catch(this.handleError);\n    }\n\n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error);\n        return Promise.reject(error.message || error);\n    }\n}","filename":"activity.service.ts"},{"type":"typescript","class":"height_25","code":"import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivityService } from \"../../services/activity.service\";\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\n\n@Component({\n    selector: 'app-jokes',\n    templateUrl: './jokes.component.html',\n    styleUrls: ['./jokes.component.scss']\n})\nexport class JokesComponent implements OnInit, OnDestroy {\n\n    output: any;\n    subscription: Subscription;\n    \n    private activities$: Observable<any>;\n    \n    constructor(\n        private activityService: ActivityService\n    ) { }\n    \n    ngOnInit() {\n        this.subscription = this.activityService\n                                    .getActivities()\n                                        .subscribe(\n                                            data => this.output = data.value.joke\n                                        );\n    }\n    \n    ngOnDestroy() {\n        // unsubscribe to ensure no memory leaks\n        this.subscription.unsubscribe();\n    }\n\n}\n","filename":"jokes.component.ts"},{"type":"html","class":"height_25","code":"<app-nav></app-nav>\n\n<h3>Jokes</h3>\n<p>\n    {{output || 'Wait'}}\n</p>\n","filename":"joke.component.html"}]}