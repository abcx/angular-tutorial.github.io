{"background":{"class":"border_1"},"controls":{"l":"false","r":"false","t":"false","b":"false"},"subtitle":{"selector":"subtitle","text":"Pipes"},"code":[{"type":"html","class":"","code":"cd src/app\n\nmkdir pipes\n\ncd pipes\n\nng g pipe format-file-size\n\nnpm start","filename":""},{"type":"typescript","class":"height_33","code":"import { Pipe, PipeTransform } from '@angular/core';\n\nconst FILE_SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst FILE_SIZE_UNITS_LONG = ['Bytes', 'Kilobytes', 'Megabytes', 'Gigabytes', 'Pettabytes', 'Exabytes', 'Zettabytes', 'Yottabytes'];\n\n@Pipe({\n    name: 'formatFileSize'\n})\nexport class FormatFileSizePipe implements PipeTransform {\n    \n    transform(sizeInBytes: number, longForm: boolean): string {\n        \n        const units = longForm\n            ? FILE_SIZE_UNITS_LONG\n            : FILE_SIZE_UNITS;\n      \n        let power = Math.round(Math.log(sizeInBytes) / Math.log(1024));\n        power = Math.min(power, units.length - 1);\n      \n        const size = sizeInBytes / Math.pow(1024, power);   // size in new units 'https://developer.mozilla.org/pl/docs/Web/JavaScript/Referencje/Obiekty/Math/pow'\n        const formattedSize = Math.round(size * 100) / 100; // keep up to 2 decimals\n        const unit = units[power];\n      \n        return `${formattedSize} ${unit}`; // look at ECMA6's style quotation marks\n    }\n}","filename":"format-file-size.pipe.ts"}]}