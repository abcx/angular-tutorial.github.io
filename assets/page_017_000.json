{"background":{"class":"border_1"},"controls":{"l":"false","r":"false","t":"false","b":"false"},"subtitle":{"selector":"subtitle","text":"editor.component"},"code":[{"type":"sass","class":"","code":"form {padding: 20px}","filename":"editor.component.scss"},{"type":"typescript","class":"height_50","code":"import { Injectable } from '@angular/core';\nimport { Headers, Http } from '@angular/http';\nimport 'rxjs/add/operator/toPromise';\nimport { FakeData } from '../classes/fake-data';\n\n@Injectable()\nexport class TableService {\n    \n    private apiUrl = 'api/data';\n    public  tableParams = {\n                small: true,\n                striped: false,\n                bordered: false,\n                hover: false\n            };\n\n    constructor(\n        private http: Http\n    ) { }\n\n    getData(): Promise<FakeData[]> {\n        return this.http.get(this.apiUrl)\n                   .toPromise()\n                   .then(response => response.json().data as FakeData[])\n                   .catch(this.handleError);\n    }\n    \n    // NEW\n    getItemData(id: number): Promise<FakeData> {\n        return this.http.get(this.apiUrl)\n                   .toPromise()\n                   .then(response => response.json().data[id] as FakeData)\n                   .catch(this.handleError);\n    }\n     \n    private handleError(error: any): Promise<any> {\n        console.error('An error occurred', error);\n        return Promise.reject(error.message || error);\n    }\n}\n","filename":"table.service.ts"}]}